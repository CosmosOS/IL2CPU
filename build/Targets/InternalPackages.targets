<Project>

    <ItemGroup>
        <XSharpPackage Include="XSharp" ProjectPath="source\XSharp\XSharp.csproj" />
        <XSharpPackage Include="XSharp.Assembler" ProjectPath="source\XSharp.Assembler\XSharp.Assembler.csproj" />
    </ItemGroup>

    <ItemGroup>
        <InternalPackage Include="@(XSharpPackage)" Version="$(XSharpVersion)" RepoRoot="$(XSharpRepoRoot)" />
    </ItemGroup>

    <ItemGroup>
        <_InternalPackageToExclude Include="@(InternalPackage)" Exclude="@(PackageReference)" />
        <_InternalPackage Include="@(InternalPackage)" Exclude="@(_InternalPackageToExclude)" />
        <_InternalPackage Update="@(_InternalPackage)" ProjectPath="$([System.IO.Path]::Combine(%(RepoRoot), %(ProjectPath)))">
            <ProjectExists Condition="Exists(%(ProjectPath))">True</ProjectExists>
        </_InternalPackage>
        <_InternalPackageToReplace Include="@(_InternalPackage->WithMetadataValue('ProjectExists', 'True'))" />
        <!-- next 3 lines: hack to move metadata from _InternalPackage to PackageReference -->
        <_InternalPackageToKeep Include="@(_InternalPackage)" Exclude="@(_InternalPackageToReplace)" />
        <PackageReference Remove="@(_InternalPackage)" />
        <PackageReference Include="@(_InternalPackageToKeep)" />
        <ProjectReference Include="@(_InternalPackageToReplace->'%(ProjectPath)')" />
    </ItemGroup>

</Project>
